From 61b62c1016d7eadd6c3b79bdd1773ac3f00bc440 Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Sun, 2 Mar 2025 22:14:34 +1100
Subject: [PATCH 8/8] export two symbols needed by grpc

---
 upb/mem/alloc.h          | 2 +-
 upb/mem/internal/arena.h | 2 ++
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/upb/mem/alloc.h b/upb/mem/alloc.h
index 441731d2d..8f46e9afd 100644
--- a/upb/mem/alloc.h
+++ b/upb/mem/alloc.h
@@ -52,7 +52,7 @@ UPB_INLINE void upb_free(upb_alloc* alloc, void* ptr) {
 
 // The global allocator used by upb. Uses the standard malloc()/free().
 
-extern upb_alloc upb_alloc_global;
+UPB_API extern upb_alloc upb_alloc_global;
 
 /* Functions that hard-code the global malloc.
  *
diff --git a/upb/mem/internal/arena.h b/upb/mem/internal/arena.h
index 9a6469edc..796763a3f 100644
--- a/upb/mem/internal/arena.h
+++ b/upb/mem/internal/arena.h
@@ -49,6 +49,8 @@ UPB_INLINE size_t UPB_PRIVATE(_upb_ArenaHas)(const struct upb_Arena* a) {
   return (size_t)(a->UPB_ONLYBITS(end) - a->UPB_ONLYBITS(ptr));
 }
 
+UPB_API void* UPB_PRIVATE(_upb_Arena_SlowMalloc)(struct upb_Arena * a, size_t size);
+
 UPB_API_INLINE void* upb_Arena_Malloc(struct upb_Arena* a, size_t size) {
   void* UPB_PRIVATE(_upb_Arena_SlowMalloc)(struct upb_Arena * a, size_t size);
 
